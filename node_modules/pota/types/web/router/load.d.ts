/**
 * For dynamic imports. For `lazy` components see `lazy` instead. Used
 * as `load(()=>import('file.js'))`. It retries a couple of times on
 * network error. Scrolls the document to the hash of the url, or
 * fallbacks defined on the `<Route>` components.
 *
 * @param {() => Promise<any>} component - Import statement
 * @param {{
 * 	onLoading?: any
 * 	onLoaded?: Function
 * 	onError?: ((e: Error, retry: Function) => any) | any
 * }} [options]
 * @returns {Component}
 * @url https://pota.quack.uy/load
 */
export function load(component: () => Promise<any>, options?: {
    onLoading?: any;
    onLoaded?: Function;
    onError?: ((e: Error, retry: Function) => any) | any;
}): Component;
//# sourceMappingURL=load.d.ts.map