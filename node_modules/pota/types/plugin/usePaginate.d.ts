/**
 * @typedef {object} PaginatePage
 * @property {Signal} items - The sliced items
 * @property {Signal} currentPage - The page number
 * @property {Signal} totalPages - Amount of pages
 * @property {Signal} hasNext - Returns a boolean indicating if has a
 *   next page
 * @property {Signal} next - To go to next page updating the items
 * @property {Signal} hasPrevious - Returns a boolean indicating if
 *   has a previous page
 * @property {Signal} previous - To go to prev page updating the items
 */
/**
 * Paginates `items` and provides "prev" and "next" functions to use
 * on pagination buttons
 *
 * @param {any[] | Signal} items - List of items to paginate
 * @param {number} numPerPage - How many to display at the same time
 * @returns {PaginatePage} Page
 */
export function paginateValues(items: any[] | Signal, numPerPage: number): PaginatePage;
/**
 * Paginates items and provides "prev" and "next" functions to use on
 * pagination buttons
 *
 * @param {(start, end) => any | Signal} fetch - Function to get items
 *   from
 * @param {object} options
 * @param {object} options.numPerPage - How many items are displayed
 *   at the same time
 * @param {object} options.numItems - How many items there are in
 *   total
 * @returns {PaginatePage} Page
 */
export function paginate(fetch: (start: any, end: any) => any | Signal, options: {
    numPerPage: object;
    numItems: object;
}): PaginatePage;
export type PaginatePage = {
    /**
     * - The sliced items
     */
    items: Signal;
    /**
     * - The page number
     */
    currentPage: Signal;
    /**
     * - Amount of pages
     */
    totalPages: Signal;
    /**
     * - Returns a boolean indicating if has a
     * next page
     */
    hasNext: Signal;
    /**
     * - To go to next page updating the items
     */
    next: Signal;
    /**
     * - Returns a boolean indicating if
     * has a previous page
     */
    hasPrevious: Signal;
    /**
     * - To go to prev page updating the items
     */
    previous: Signal;
};
//# sourceMappingURL=usePaginate.d.ts.map