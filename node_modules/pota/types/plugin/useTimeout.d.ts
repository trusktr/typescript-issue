/**
 * Creates a `setTimeout` that autodisposes. The `delay` could be
 * reactive. The timeout is NOT started automatically.
 *
 * @param {Function} callback - Callback to run once delay completes
 * @param {Signal | number} delay - Delay number or signal
 * @param {any[]} args - Arguments to pass to the callback
 * @returns {{ start: Function; stop: Function }}
 */
export function useTimeout(callback: Function, delay: Signal | number, ...args: any[]): {
    start: Function;
    stop: Function;
};
//# sourceMappingURL=useTimeout.d.ts.map