/**
 * Like Map but tracks.
 *
 * 1. Instances are supposed to be used Proxied, so theres no need for
 *    batching, because the proxy already batches the functions.
 * 2. This is an internal Class and is not meant to be used outside
 *    `mutable`.
 */
export class ReactiveMap extends Map<any, any> {
    [x: symbol]: Track | (() => Generator<[any, any], void, unknown>);
    constructor();
    constructor(entries?: readonly (readonly [any, any])[] | null | undefined);
    constructor();
    constructor(iterable?: Iterable<readonly [any, any]> | null | undefined);
    has(key: any): boolean;
    get(key: any): any;
    set(key: any, value: any): this;
    delete(key: any): boolean;
    forEach(cb: any): void;
    keys(): Generator<any, void, unknown>;
    values(): Generator<any, void, unknown>;
    entries(): Generator<[any, any], void, unknown>;
}
import { Track } from '../tracker.js';
//# sourceMappingURL=map.d.ts.map